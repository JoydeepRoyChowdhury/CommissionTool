<project name="CommissionTool" basedir="." default="install">

	<!-- project-specific variables -->
	<property name="jsp.dir.name" value="CommissionTool" />
	<property name="package.name" value="${jsp.dir.name}.war" />
	<property name="webapp.dir" value="D:\apache-tomcat-8.0.28\apache-tomcat-8.0.28\webapps" />

	<property environment="env" />
	<property name="build.dir" value="build" />
	<property file="${build.dir}/build.${env.HOSTNAME}" />

	<property name="lib.dir" value="lib" />
	<property name="pages.dir" value="pages" />
	<property name="src.dir" value="src/java" />
	<property name="src.tests.dir" value="src/test" />
	<property name="resources.dir" value="resources" />
	<property name="dest.dir" value="target" />

	<!-- put everything in a temp folder with the right structure during the build -->
	<property name="temp.dir" value="temp" />
	<property name="temp.dir.web-inf" value="${temp.dir}/WEB-INF" />
	<property name="temp.dir.lib" value="${temp.dir.web-inf}/lib" />
	<property name="temp.dir.classes" value="${temp.dir.web-inf}/classes" />
	<property name="temp.dir.meta-inf" value="${temp.dir}/META-INF" />

	<property name="temp.mockup" value="tempMockup" />

	<property name="package.file" value="${dest.dir}/${package.name}" />

	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="E:/Swarup/CommissionTool/lib/ant-contrib-0.3.jar" />
		</classpath>
	</taskdef>

	<path id="build.class.path">
		<fileset dir="lib">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="clean">
		<delete failonerror= "false">
			<fileset dir="${dest.dir}" includes="**/*" />
		</delete>
		<delete dir="${temp.dir}" />
		<delete dir="${temp.dir.classes}" />
		<delete dir="${temp.dir.meta-inf}" />
		<delete dir="${temp.dir.web-inf}" />
		<delete dir="${temp.mockup}" />
	</target>

	<target name="prepare" depends="clean">
		<mkdir dir="${dest.dir}" />
		<mkdir dir="${temp.dir}" />
		<mkdir dir="${temp.dir.lib}" />
		<mkdir dir="${temp.dir.meta-inf}" />
		<mkdir dir="${temp.dir.web-inf}" />
		<mkdir dir="${temp.dir.classes}" />
		<mkdir dir="${temp.mockup}" />
	</target>

	<!-- PACK Mockups -->
	<target name="packMockup" depends="prepare">
		<echo>=== PACKAGE ===</echo>
		<copy todir="${temp.mockup}/mockup" overwrite="true">
			<fileset dir="ui/mockups" />
		</copy>
		<mkdir dir="${temp.mockup}/mockup/dist" />
		<!--  PACK Mockups for menu -->
		<loadfile property="menu" srcFile="${temp.mockup}/mockup/html/components/menu.html" />
		<replace file="${temp.mockup}/mockup/html/App.template" token="@@MENU@@" value="${menu}" />
		<foreach target="includeTemplate" param="fileLoaction">
			<fileset dir="${temp.mockup}" casesensitive="yes">
				<include name="**/*.html" />
			</fileset>
		</foreach>
		<!--<antcall target="includeTemplate">
			<param name="fileLoaction" value="${temp.mockup}/mockup/html/pages/compReport/CompReport.html"/>
				</antcall> -->
	</target>

	<target name="includeTemplate">
		<loadfile property="fileContent" srcFile="${fileLoaction}" />
		<copy file="${temp.mockup}/mockup/html/App.template" tofile="${fileLoaction}" />
		<replace file="${fileLoaction}" token="@@FILECONTENT@@" value="${fileContent}" />
	</target>

	<!-- COMPILE -->
	<target name="compile" depends="prepare">
		<echo>=== COMPILE ===</echo>
		<echo>Compiling ${src.dir} files ...</echo>
		<javac debug="on" srcdir="${src.dir}" destdir="${temp.dir.classes}" includes="**/*">
			<classpath refid="build.class.path" />
		</javac>

		<!-- compile files on the src-tests path -->
		<echo>Compiling ${src.tests.dir} files ...</echo>
		<javac debug="on" srcdir="${src.tests.dir}" destdir="${temp.dir.classes}" includes="com/**">
			<classpath refid="build.class.path" />
		</javac>
	</target>

	<!-- PACKAGE -->
	<target name="package" depends="compile">
		<echo>=== PACKAGE ===</echo>

		<!-- copy the config files -->
		<!--
		<copy file="${resources.dir}/MANIFEST.MF" tofile="${temp.dir.meta-inf}/MANIFEST.MF" overwrite="true" />
		<copy file="${resources.dir}/web.xml" tofile="${temp.dir.web-inf}/web.xml" overwrite="true" />
		<copy file="${resources.dir}/managed-beans.xml" tofile="${temp.dir.web-inf}/managed-beans.xml" overwrite="true" />
		<copy file="${resources.dir}/navigation-rules.xml" tofile="${temp.dir.web-inf}/navigation-rules.xml" overwrite="true" />
		-->
		<copy todir="${temp.dir.web-inf}" overwrite="true">
			<fileset dir="WebContent/WEB-INF">
			</fileset>
		</copy>

		<copy todir="${temp.dir.lib}" overwrite="true" flatten="true">
			<fileset dir="lib">
				<include name="**/*.jar" />
			</fileset>
		</copy>

		<copy todir="${temp.dir.classes}">
			<fileset dir="${src.dir}">
				<include name="**/*.xml" />
				<include name="**/*.xsl" />
			</fileset>
		</copy>

		<!-- the ant war task. with all resources in place, create the war file -->
		<war destfile="${package.file}" webxml="${temp.dir.web-inf}/web.xml" basedir="${temp.dir}">
			<fileset dir="${pages.dir}" />
			<lib dir="${temp.dir.lib}" />
			<classes dir="${temp.dir.classes}" />
		</war>
	</target>

	<!-- JUST DEPLOY THE JSP's (without rebuilding the entire project) -->
	<target name="jsps">
		<echo>=== DEPLOY JSP'S ===</echo>
		<!-- i'm trying to be explicit about what i put out there -->
		<copy todir="${webapp.dir}/${jsp.dir.name}">
			<fileset dir="${pages.dir}">
				<include name="**/*.jsp" />
				<include name="**/*.html" />
				<include name="**/*.css" />
				<include name="**/*.gif" />
				<include name="**/*.jpg" />
				<include name="**/*.png" />
				<include name="**/*.js" />
			</fileset>
		</copy>
	</target>

	<!-- INSTALL -->
	<target name="install" depends="package, packMockup">
		<echo>=== INSTALL ===</echo>
		<copy file="${package.file}" tofile="${webapp.dir}/${package.name}" overwrite="true" />
	</target>

</project>